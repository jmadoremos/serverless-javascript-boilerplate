{
    "root": true,
    "extends": "eslint:recommended",
    "parserOptions": {
        "ecmaVersion": 6,
        "sourceType": "module"
    },
    "env": {
        "node": true,
        "mocha": true
    },
    "rules": {
        // Enforce a maximum cyclomatic complexity allowed in a program
        "complexity": [
            "warn",
            10
        ],
        // Enforce consistent brace style for all control statements
        "curly": "error",
        // Require the use of `===` and `!==`
        "eqeqeq": [
            "error",
            "smart"
        ],
        // Require or disallow newline at the end of files
        "eol-last": "error",
        // Require `for-in` loops to include an `if` statement
        "guard-for-in": "error",
        // Enforce a maximum line length
        "max-len": [
            "error",
            {
                "code": 200
            }
        ],
        // Disallow bitwise operators
        "no-bitwise": "error",
        // Disallow the use of `arguments.caller` or `arguments.callee`
        "no-caller": "error",
        // Disallow arrow functions where they could be confused with comparisons
        "no-confusing-arrow": "error",
        // Disallow the use of `console`
        "no-console": [
            "error",
            {
                "allow": [
                    "dir",
                    "error",
                    "log",
                    "table",
                    "warn"
                ]
            }
        ],
        // Disallow duplicate module imports
        "no-duplicate-imports": "error",
        // Disallow empty block statements
        "no-empty": "off",
        // Disallow the use of `eval()`
        "no-eval": "error",
        // Disallow `new` operators with the `String`, `Number`, and `Boolean` objects
        "no-new-wrappers": "error",
        // Disallow variable declarations from shadowing variables declared in the outer scope
        "no-shadow": [
            "error",
            {
                "hoist": "all"
            }
        ],
        // Disallow throwing literals as exceptions
        "no-throw-literal": "error",
        // Disallow trailing whitespace at the end of lines
        "no-trailing-spaces": "error",
        // Disallow dangling underscores in identifiers
        "no-underscore-dangle": "error",
        // Disallow unused expressions
        "no-unused-expressions": "error",
        // Require `let` or `const` instead of `var`
        "no-var": "error",
        // Require `const` declarations for variables that are never reassigned after declared
        "prefer-const": "error",
        // Enforce the consistent use of the radix argument when using `parseInt()`
        "radix": "error",
        // Enforce consistent spacing after the `//` or `/*` in a comment
        "spaced-comment": "error"
    }
}
